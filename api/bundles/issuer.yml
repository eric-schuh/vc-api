openapi: 3.0.0
info:
  version: 0.0.3-unstable
  title: VC Issuer API
  description: This is an Experimental Open API Specification for the [VC Data Model](https://www.w3.org/TR/vc-data-model/).
  license:
    name: W3C Software and Document License
    url: http://www.w3.org/Consortium/Legal/copyright-software.
  contact:
    name: GitHub Source Code
    url: https://github.com/w3c-ccg/vc-api
servers:
  - url: https://issuer.qa.veres.app/issuers/z19mTE4x8KHRaQLgdoYwsfPnU
    description: Veres Issuer (Quality Assurance)
paths:
  /credentials/issue:
    post:
      summary: Issues a credential and returns it in the response body.
      tags:
        - Credentials
      security:
        - networkAuth: []
        - oAuth2: []
        - zCap: []
      operationId: issueCredential
      description: Issues a credential and returns it in the response body.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialRequest'
        description: Parameters for issuing the credential.
      responses:
        '201':
          description: Credential successfully issued!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialResponse'
        '400':
          description: |
            The request could not be processed due to one of the following reasons:
                        - The provided value of 'issuer' does not match the expected configuration.
                        - Another condition that results in a Bad Request.
        '500':
          description: error!
  /credentials/status:
    post:
      summary: Updates the status of an issued credential
      tags:
        - Credentials
      security:
        - networkAuth: []
        - oAuth2: []
        - zCap: []
      operationId: updateCredentialStatus
      description: Updates the status of an issued credential.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCredentialStatus'
        description: Parameters for updating the status of the issued credential.
      responses:
        '200':
          description: Credential status successfully updated
        '400':
          description: Bad Request
        '404':
          description: Credential not found
        '500':
          description: Internal Server Error
components:
  securitySchemes:
    networkAuth:
      type: http
      scheme: bearer
      bearerFormat: sourceIpAccessRules
    zCap:
      type: http
      scheme: bearer
      bearerFormat: AuthorizationCapability
    didAuth:
      type: http
      scheme: bearer
      bearerFormat: VerifiablePresentation
    oAuth2:
      type: http
      scheme: bearer
      bearerFormat: VcapiOauth2
  schemas:
    IssueCredentialRequest:
      type: object
      properties:
        credential:
          $ref: '#/components/schemas/UnsecuredCredential'
        options:
          $ref: '#/components/schemas/IssueCredentialOptions'
    IssueCredentialResponse:
      type: object
      properties:
        IssueCredentialSuccess:
          $ref: '#/components/schemas/IssueCredentialSuccess'
    UpdateCredentialStatus:
      type: object
      description: Request for updating the status of an issued credential.
      properties:
        credentialId:
          type: string
        credentialStatus:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              status:
                type: string
      example:
        credentialId: urn:uuid:45a44711-e457-4fa8-9b89-69fe0287c86a
        credentialStatus:
          - type: RevocationList2020Status
            status: '0'
    IssuerRequest:
      type: object
      description: A W3C Verifiable Credential Issuer. The presence of object 'issuer' is optional (and it SHOULD be omitted). If provided, it MUST adhere to the configuration requirements of the particular implementation. Implementations MUST be able to understand and process the supplied value in accordance with their configuration. In scenarios where multiple configurations exist for a specific endpoint, the 'issuer' object, if present, MAY be utilized to select among multiple potential issuers. In such cases, the provided 'issuer' value MUST align with the available configurations, allowing the implementation to appropriately determine the issuer for the specific request. Implementations MUST ensure that the selected issuer aligns with their configuration and can be processed successfully.
      oneOf:
        - type: string
        - type: object
          properties:
            id:
              type: string
              description: The issuer id.
      example:
        id: did:key:z6MkjRagNiMu91DduvCvgEsqLZDVzrJzFrwahc4tXLt9DoHd
    UnsecuredCredential:
      type: object
      description: A W3C Verifiable Credential without a proof.
      properties:
        '@context':
          type: array
          description: The JSON-LD context of the credential.
          items:
            type: string
        id:
          type: string
          description: The ID of the credential.
        type:
          type: array
          description: The JSON-LD type of the credential.
          items:
            type: string
        issuer:
          $ref: '#/components/schemas/IssuerRequest'
        issuanceDate:
          type: string
          description: The issuanceDate
        expirationDate:
          type: string
          description: The expirationDate
        credentialSubject:
          type: object
          description: The subject
      example:
        '@context':
          - https://www.w3.org/2018/credentials/v1
          - https://www.w3.org/2018/credentials/examples/v1
        id: http://example.gov/credentials/3732
        type:
          - VerifiableCredential
          - UniversityDegreeCredential
        issuer: did:example:123
        issuanceDate: '2020-03-16T22:37:26.544Z'
        credentialSubject:
          id: did:example:123
          degree:
            type: BachelorDegree
            name: Bachelor of Science and Arts
    IssueCredentialOptions:
      type: object
      additionalProperties: false
      description: Options for specifying how a credential is issued.
      properties:
        mandatoryPointers:
          type: array
          description: Used with selective disclosure schemes to specify mandatory reveal statements
          items:
            type: string
        credentialId:
          type: string
          description: |
            A URI that can be used to identify the credential, that can be used in APIs to refer to the issued verifiable credential. If credentialId is not provided by the issuer coordinator, the issuer service will auto-populate its value from credential.id. If neither credentialId nor credential.id is provided, it will not be possible to refer to this credential once issued nor to deal with errors of duplication. credentialId SHOULD NOT be set by the issuer coordinator if the credential.id property is set, nor should credentialId be used as a replacement for credential.id; rather, credentialId is a means of identifying a credential without the id property (i.e., credential.id) being set. The issuer service SHOULD NOT auto-generate a credentialId if one is not supplied by the issuer coordinator, because doing so could create a partitioning error if the result is never received by the client.
      example:
        credentialId: example.com/ad5d541f-db7a-4bff-97e1-d403ce403767
        mandatoryPointers:
          - /issuer
          - /validFrom
          - /validUntil
    Issuer:
      type: object
      description: A JSON-LD Verifiable Credential Issuer.
      oneOf:
        - type: string
        - type: object
          properties:
            id:
              type: string
              description: The issuer id.
      example:
        id: did:key:z6MkjRagNiMu91DduvCvgEsqLZDVzrJzFrwahc4tXLt9DoHd
    Credential:
      type: object
      description: A JSON-LD Verifiable Credential without a proof.
      properties:
        '@context':
          type: array
          description: The JSON-LD context of the credential.
          items:
            type: string
        id:
          type: string
          description: The ID of the credential. This property MAY be empty. The issuer SHOULD NOT auto-generate the id property if not provided, as a Verifiable Credential does not require the id property to be valid, and there are use cases for which the id property cannot be set.
        type:
          type: array
          description: The JSON-LD type of the credential.
          items:
            type: string
        issuer:
          $ref: '#/components/schemas/Issuer'
        issuanceDate:
          type: string
          description: The issuanceDate
        expirationDate:
          type: string
          description: The expirationDate
        credentialSubject:
          type: object
          description: The subject
      example:
        '@context':
          - https://www.w3.org/2018/credentials/v1
          - https://www.w3.org/2018/credentials/examples/v1
        id: http://example.gov/credentials/3732
        type:
          - VerifiableCredential
          - UniversityDegreeCredential
        issuer: did:example:123
        issuanceDate: '2020-03-16T22:37:26.544Z'
        credentialSubject:
          id: did:example:123
          degree:
            type: BachelorDegree
            name: Bachelor of Science and Arts
    DataIntegrityProof:
      type: object
      description: A Data Integrity Proof as defined by the W3C VC Data Integrity specification.
      properties:
        type:
          type: string
          description: Data Integrity Proof type.
        cryptosuite:
          type: string
          description: The name of the cryptographic suite.
        created:
          type: string
          description: Date the proof was created.
        challenge:
          type: string
          description: A value chosen by the verifier to mitigate authentication proof replay attacks.
        domain:
          type: string
          description: The domain of the proof to restrict its use to a particular target.
        nonce:
          type: string
          description: A value chosen by the creator of a proof to randomize proof values for privacy purposes.
        verificationMethod:
          type: string
          description: Verification Method used to verify proof.
        proofPurpose:
          type: string
          description: The purpose of the proof to be used with verificationMethod.
        proofValue:
          type: string
          description: Value of the Linked Data proof.
      example:
        type: DataIntegrityProof
        cryptosuite: ecdsa-rdfc-2019
        created: '2024-01-11T19:14:04Z'
        verificationMethod: https://di.example/issuer#zDnaepBuvsQ8cpsWrVKw8fbpGpvPeNSjVPTWoq6cRqaYzBKVP
        proofPurpose: assertionMethod
        proofValue: zXb23ZkdakfJNUhiTEdwyE598X7RLrkjnXEADLQZ7vZyUGXX8cyJZRBkNw813SGsJHWrcpo4Y8hRJ7adYn35Eetq
    IssueCredentialSuccess:
      type: object
      description: The format returned from a successful issue request.
      properties:
        verifiableCredential:
          type: object
          description: A JSON-LD Verifiable Credential with a proof.
          allOf:
            - $ref: '#/components/schemas/Credential'
            - type: object
              properties:
                proof:
                  $ref: '#/components/schemas/DataIntegrityProof'
